Functional test que va a probar varias callback url erroneas, lo cual no va a mover
el objeto de su estado privado:

    >>> import os

    >>> app = layer['app']
    >>> portal = layer['portal']
    >>> request = layer['request']

    >>> from DateTime import DateTime as now

    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> portalURL = portal.absolute_url()

    >>> from plone.app.testing import SITE_OWNER_NAME, SITE_OWNER_PASSWORD
    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

Vamos al home y agregamos una seccion "I report", para poder agregar reportes

    >>> browser.getLink('Home').click()
    >>> browser.getLink('I report section').click()
    >>> browser.getControl('Title').value = 'Soy reportero'
    >>> browser.getControl('Save').click()
    >>> section_url = portalURL + '/soy-reportero'
    >>> browser.getLink('Publish').click()

Ahora salimos, y vamos a cargar un reporte anonimo, le vamos a asignar un id del archivo,
y vamos a guardar para que se cree la estructura remota.

    >>> browser.open(portalURL + '/logout')
    >>> browser.open(section_url)

    >>> browser.getLink(id='add-new-report').click()
    >>> browser.getControl('Title').value = "My Valid Report"
    >>> browser.getControl('Name').value = "Frapell"
    >>> browser.getControl('Country').value = ["AR"]
    >>> browser.getControl(name="form.widgets.file_id").value = "callback-test-valid-id"
    >>> browser.getControl(name="form.widgets.file_type").value = "image"
    >>> browser.getControl(name="form.widgets.date-day").value = "1"
    >>> browser.getControl(name="form.widgets.date-month").value = ['1']
    >>> browser.getControl(name="form.widgets.date-year").value = "2012"
    >>> browser.getControl("Send").click()

    >>> id = "my-valid-report"

Ingresamos al sitio y vemos que el reporte no es visible:

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Vamos a intentar llamar al callback url sin parametros

    >>> browser.open(portalURL + '/logout')
    >>> callback_url = "%s/%s/@@processed_result" % (section_url, id)
    >>> browser.open(callback_url)

Vemos que el objeto sigue sin ser visible

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Ahora, vamos a intentar con un key falso

    >>> browser.open(portalURL + '/logout')
    >>> callback_url = "%s/%s/@@processed_result?key=invalid-key" % (section_url, id)
    >>> browser.open(callback_url)

Vemos que el objeto sigue sin ser visible

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Ahora, vamos a intentar con un key falso y con el type=success

    >>> browser.open(portalURL + '/logout')
    >>> callback_url = "%s/%s/@@processed_result?key=invalid-key&type=success" % (section_url, id)
    >>> browser.open(callback_url)

Vemos que el objeto sigue sin ser visible

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Ahora, vamos a intentar con un key valido y sin type

    >>> browser.open(portalURL + '/logout')
    >>> import hashlib
    >>> m = hashlib.md5()
    >>> secret = "security_key"
    >>> file_id = "callback-test-valid-id"
    >>> m.update(secret+file_id)
    >>> digest = m.hexdigest()
    >>> callback_url = "%s/%s/@@processed_result?key=%s" % (section_url, id, digest)
    >>> browser.open(callback_url)

Vemos que el objeto sigue sin ser visible

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Ahora, vamos a intentar con un key valido y con type erroneo

    >>> browser.open(portalURL + '/logout')

    >>> m = hashlib.md5()
    >>> secret = "security_key"
    >>> file_id = "callback-test-valid-id"
    >>> m.update(secret+file_id)
    >>> digest = m.hexdigest()
    >>> callback_url = "%s/%s/@@processed_result?key=%s&type=invalid" % (section_url, id, digest)
    >>> browser.open(callback_url)

Vemos que el objeto sigue sin ser visible

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    False

Por ultimo, lo hacemos con el key valido y con el type correcto:

    >>> browser.open(portalURL + '/logout')

    >>> m = hashlib.md5()
    >>> secret = "security_key"
    >>> file_id = "callback-test-valid-id"
    >>> m.update(secret+file_id)
    >>> digest = m.hexdigest()
    >>> callback_url = "%s/%s/@@processed_result?key=%s&type=success" % (section_url, id, digest)
    >>> browser.open(callback_url)

Volvemos a ingresar y vemos que ahora reporte es visible:

    >>> browser.open(portalURL + '/login_form')
    >>> browser.getControl(name='__ac_name').value = SITE_OWNER_NAME
    >>> browser.getControl(name='__ac_password').value = SITE_OWNER_PASSWORD
    >>> browser.getControl(name='submit').click()

    >>> 'You are now logged in' in browser.contents
    True

    >>> browser.open(section_url)

    >>> "My Valid Report" in browser.contents
    True
